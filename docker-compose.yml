version: '3.6'

services:
    ollama: 
      image: ollama/ollama:latest
      volumes:
        - /ollama/models:/home/models
      environment:
        - OLLAMA_MODELS=/home/models
      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                capabilities: [gpu]
    
    chroma:
      image: chromadb/chroma:0.5.1.dev111
      volumes:
        - index_data:/chroma/.chroma/index
      ports:
        - 8000:8000
      networks:
        - net
    
    nvidia:
      image: nvidia/cuda:12.3.1-base-ubuntu20.04
      command: nvidia-smi
      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                count: 1
                capabilities: [gpu]
    
    ui:
      build: ./app
      ports:
        - 8080:8080
        - 9000:9000
      volumes:
        - ./app:/app
      networks:
        - net
      depends_on:
        - nvidia
        - ollama
        - chroma
      environment:
        - MODEL=llama3
        # Embedding model used for document ingestion and retrieval
        - EMBEDDINGS_MODEL_NAME=sentence-transformers/all-mpnet-base-v2
        - TARGET_SOURCE_CHUNKS=5
        - ANCLORA_API_TOKENS=${ANCLORA_API_TOKENS:-}
        - ANCLORA_API_TOKEN=${ANCLORA_API_TOKEN:-}
        - ANCLORA_JWT_SECRET=${ANCLORA_JWT_SECRET:-}
        - ANCLORA_JWT_ALGORITHMS=${ANCLORA_JWT_ALGORITHMS:-HS256}
        - ANCLORA_JWT_AUDIENCE=${ANCLORA_JWT_AUDIENCE:-}
        - ANCLORA_JWT_ISSUER=${ANCLORA_JWT_ISSUER:-}
        - PROMETHEUS_METRICS_PORT=9000
        - PROMETHEUS_METRICS_HOST=0.0.0.0
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8080/_stcore/health"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 40s

    api:
      build: ./app
      ports:
        - 8081:8081
        - 9001:9001
      volumes:
        - ./app:/app
      networks:
        - net
      depends_on:
        - nvidia
        - ollama
        - chroma
      environment:
        - MODEL=llama3
        # Embedding model used for document ingestion and retrieval
        - EMBEDDINGS_MODEL_NAME=sentence-transformers/all-mpnet-base-v2
        - TARGET_SOURCE_CHUNKS=5
        - PROMETHEUS_METRICS_PORT=9001
        - PROMETHEUS_METRICS_HOST=0.0.0.0
      command: ["python", "-m", "uvicorn", "api_endpoints:app", "--host", "0.0.0.0", "--port", "8081"]
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 40s

    prometheus:
      image: prom/prometheus:latest
      ports:
        - 9090:9090
      volumes:
        - ./docker/observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      networks:
        - net
      depends_on:
        - ui
        - api

    grafana:
      image: grafana/grafana:10.4.3
      ports:
        - 3000:3000
      environment:
        - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
        - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
        - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      volumes:
        - ./docker/observability/grafana/provisioning:/etc/grafana/provisioning:ro
      networks:
        - net
      depends_on:
        - prometheus

volumes:
  index_data:

networks:
  net:
